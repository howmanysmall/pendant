name: Release

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'v0.1.0'

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Windows x86-64
          - os: windows-latest
            platform: windows-x64
            target: bun-windows-x64
            extension: .exe
          # macOS x86-64
          - os: macos-13
            platform: macos-x64
            target: bun-darwin-x64
            extension: ''
          # macOS ARM64
          - os: macos-latest
            platform: macos-arm64
            target: bun-darwin-arm64
            extension: ''
          # Ubuntu x86-64
          - os: ubuntu-latest
            platform: linux-x64
            target: bun-linux-x64
            extension: ''
          # Ubuntu ARM64 (cross-compile)
          - os: ubuntu-latest
            platform: linux-arm64
            target: bun-linux-arm64
            extension: ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun test

      - name: Build project
        run: bun run build

      - name: Create standalone executable
        run: |
          # Get version from tag or workflow input
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}
          
          # Use the correct target for all platforms
          bun build ./dist --compile --production --target=${{ matrix.target }} --outfile=pendant-${VERSION}-${{ matrix.platform }}${{ matrix.extension }} --minify
        shell: bash

      - name: Create archive
        run: |
          # Get version from tag or workflow input
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}
          
          # Create zip archives for all platforms
          if [ "${{ runner.os }}" = "Windows" ]; then
            7z a pendant-${VERSION}-${{ matrix.platform }}.zip pendant-${VERSION}-${{ matrix.platform }}${{ matrix.extension }}
          else
            zip pendant-${VERSION}-${{ matrix.platform }}.zip pendant-${VERSION}-${{ matrix.platform }}${{ matrix.extension }}
          fi
        shell: bash

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'release'
        with:
          files: pendant-*-${{ matrix.platform }}.zip

      - name: Upload artifacts (for workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: pendant-${{ github.event.inputs.version }}-${{ matrix.platform }}
          path: pendant-${{ github.event.inputs.version }}-${{ matrix.platform }}.zip
          retention-days: 30
